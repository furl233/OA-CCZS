{"remainingRequest":"D:\\项目\\new-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\项目\\new-app\\src\\pages\\SupremeUser\\components\\Home.vue?vue&type=template&id=1a088099&scoped=true&","dependencies":[{"path":"D:\\项目\\new-app\\src\\pages\\SupremeUser\\components\\Home.vue","mtime":1606718897762},{"path":"D:\\项目\\new-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\new-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\项目\\new-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\new-app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}